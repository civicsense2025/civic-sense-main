export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      article_bias_analysis: {
        Row: {
          ai_analysis_version: string | null
          ai_confidence: number | null
          ai_reasoning: string | null
          analysis_method: string | null
          analyzed_at: string | null
          analyzer_id: string | null
          article_author: string | null
          article_title: string | null
          article_url: string
          confidence_level: number | null
          created_at: string | null
          detected_techniques: Json | null
          dimension_scores: Json
          emotional_language_score: number | null
          emotional_manipulation_score: number | null
          factual_accuracy_score: number | null
          factual_claims: Json | null
          id: string
          organization_id: string | null
          overall_bias_score: number | null
          published_at: string | null
          source_diversity_score: number | null
          source_metadata_id: string | null
        }
        Insert: {
          ai_analysis_version?: string | null
          ai_confidence?: number | null
          ai_reasoning?: string | null
          analysis_method?: string | null
          analyzed_at?: string | null
          analyzer_id?: string | null
          article_author?: string | null
          article_title?: string | null
          article_url: string
          confidence_level?: number | null
          created_at?: string | null
          detected_techniques?: Json | null
          dimension_scores?: Json
          emotional_language_score?: number | null
          emotional_manipulation_score?: number | null
          factual_accuracy_score?: number | null
          factual_claims?: Json | null
          id?: string
          organization_id?: string | null
          overall_bias_score?: number | null
          published_at?: string | null
          source_diversity_score?: number | null
          source_metadata_id?: string | null
        }
        Update: {
          ai_analysis_version?: string | null
          ai_confidence?: number | null
          ai_reasoning?: string | null
          analysis_method?: string | null
          analyzed_at?: string | null
          analyzer_id?: string | null
          article_author?: string | null
          article_title?: string | null
          article_url?: string
          confidence_level?: number | null
          created_at?: string | null
          detected_techniques?: Json | null
          dimension_scores?: Json
          emotional_language_score?: number | null
          emotional_manipulation_score?: number | null
          factual_accuracy_score?: number | null
          factual_claims?: Json | null
          id?: string
          organization_id?: string | null
          overall_bias_score?: number | null
          published_at?: string | null
          source_diversity_score?: number | null
          source_metadata_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "article_bias_analysis_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "media_organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "article_bias_analysis_source_metadata_id_fkey"
            columns: ["source_metadata_id"]
            isOneToOne: false
            referencedRelation: "question_sources_enhanced"
            referencedColumns: ["source_id"]
          },
          {
            foreignKeyName: "article_bias_analysis_source_metadata_id_fkey"
            columns: ["source_metadata_id"]
            isOneToOne: false
            referencedRelation: "source_metadata"
            referencedColumns: ["id"]
          },
        ]
      }
      assessment_analytics: {
        Row: {
          event_type: string | null
          final_score: number | null
          id: number
          metadata: Json | null
          session_id: string | null
          timestamp: string | null
          user_id: string | null
        }
        Insert: {
          event_type?: string | null
          final_score?: number | null
          id?: number
          metadata?: Json | null
          session_id?: string | null
          timestamp?: string | null
          user_id?: string | null
        }
        Update: {
          event_type?: string | null
          final_score?: number | null
          id?: number
          metadata?: Json | null
          session_id?: string | null
          timestamp?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      assessment_questions: {
        Row: {
          category: string
          correct_answer: string
          created_at: string | null
          difficulty: number
          explanation: string | null
          friendly_explanation: string | null
          id: string
          is_active: boolean | null
          options: Json
          question: string
          skill_id: string | null
          translations: Json | null
          updated_at: string | null
        }
        Insert: {
          category: string
          correct_answer: string
          created_at?: string | null
          difficulty: number
          explanation?: string | null
          friendly_explanation?: string | null
          id?: string
          is_active?: boolean | null
          options: Json
          question: string
          skill_id?: string | null
          translations?: Json | null
          updated_at?: string | null
        }
        Update: {
          category?: string
          correct_answer?: string
          created_at?: string | null
          difficulty?: number
          explanation?: string | null
          friendly_explanation?: string | null
          id?: string
          is_active?: boolean | null
          options?: Json
          question?: string
          skill_id?: string | null
          translations?: Json | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "assessment_questions_skill_id_fkey"
            columns: ["skill_id"]
            isOneToOne: false
            referencedRelation: "skills"
            referencedColumns: ["id"]
          },
        ]
      }
      assessment_scoring: {
        Row: {
          category: string
          created_at: string | null
          description: string
          id: string
          recommended_content: string[] | null
          score_range_max: number
          score_range_min: number
          skill_level: string
        }
        Insert: {
          category: string
          created_at?: string | null
          description: string
          id?: string
          recommended_content?: string[] | null
          score_range_max: number
          score_range_min: number
          skill_level: string
        }
        Update: {
          category?: string
          created_at?: string | null
          description?: string
          id?: string
          recommended_content?: string[] | null
          score_range_max?: number
          score_range_min?: number
          skill_level?: string
        }
        Relationships: []
      }
      badge_requirements: {
        Row: {
          badge_id: string | null
          created_at: string | null
          id: string
          requirement_type: string
          requirement_value: Json
          updated_at: string | null
        }
        Insert: {
          badge_id?: string | null
          created_at?: string | null
          id?: string
          requirement_type: string
          requirement_value: Json
          updated_at?: string | null
        }
        Update: {
          badge_id?: string | null
          created_at?: string | null
          id?: string
          requirement_type?: string
          requirement_value?: Json
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "badge_requirements_badge_id_fkey"
            columns: ["badge_id"]
            isOneToOne: false
            referencedRelation: "skill_badges"
            referencedColumns: ["id"]
          },
        ]
      }
      bias_detection_patterns: {
        Row: {
          created_at: string | null
          dimension_id: string | null
          false_positive_rate: number | null
          id: string
          is_active: boolean | null
          keywords: string[] | null
          last_updated: string | null
          pattern_name: string
          pattern_regex: string | null
          pattern_type: string
          phrase_patterns: Json | null
          severity_weight: number | null
          times_detected: number | null
        }
        Insert: {
          created_at?: string | null
          dimension_id?: string | null
          false_positive_rate?: number | null
          id?: string
          is_active?: boolean | null
          keywords?: string[] | null
          last_updated?: string | null
          pattern_name: string
          pattern_regex?: string | null
          pattern_type: string
          phrase_patterns?: Json | null
          severity_weight?: number | null
          times_detected?: number | null
        }
        Update: {
          created_at?: string | null
          dimension_id?: string | null
          false_positive_rate?: number | null
          id?: string
          is_active?: boolean | null
          keywords?: string[] | null
          last_updated?: string | null
          pattern_name?: string
          pattern_regex?: string | null
          pattern_type?: string
          phrase_patterns?: Json | null
          severity_weight?: number | null
          times_detected?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "bias_detection_patterns_dimension_id_fkey"
            columns: ["dimension_id"]
            isOneToOne: false
            referencedRelation: "bias_dimensions"
            referencedColumns: ["id"]
          },
        ]
      }
      bias_dimensions: {
        Row: {
          created_at: string | null
          description: string | null
          dimension_name: string
          dimension_slug: string
          display_order: number | null
          id: string
          is_active: boolean | null
          scale_type: string
          scale_values: Json
        }
        Insert: {
          created_at?: string | null
          description?: string | null
          dimension_name: string
          dimension_slug: string
          display_order?: number | null
          id?: string
          is_active?: boolean | null
          scale_type?: string
          scale_values: Json
        }
        Update: {
          created_at?: string | null
          description?: string | null
          dimension_name?: string
          dimension_slug?: string
          display_order?: number | null
          id?: string
          is_active?: boolean | null
          scale_type?: string
          scale_values?: Json
        }
        Relationships: []
      }
      bias_feedback: {
        Row: {
          agrees_with_assessment: boolean | null
          article_analysis_id: string | null
          created_at: string | null
          dimension_id: string | null
          evidence_urls: string[] | null
          feedback_text: string | null
          feedback_type: string
          guest_token: string | null
          helpfulness_score: number | null
          id: string
          ip_address: unknown | null
          is_spam: boolean | null
          is_verified: boolean | null
          organization_id: string | null
          suggested_score: number | null
          updated_at: string | null
          user_agent: string | null
          user_expertise_areas: string[] | null
          user_expertise_level: string | null
          user_id: string | null
          verification_notes: string | null
          verified_by: string | null
        }
        Insert: {
          agrees_with_assessment?: boolean | null
          article_analysis_id?: string | null
          created_at?: string | null
          dimension_id?: string | null
          evidence_urls?: string[] | null
          feedback_text?: string | null
          feedback_type: string
          guest_token?: string | null
          helpfulness_score?: number | null
          id?: string
          ip_address?: unknown | null
          is_spam?: boolean | null
          is_verified?: boolean | null
          organization_id?: string | null
          suggested_score?: number | null
          updated_at?: string | null
          user_agent?: string | null
          user_expertise_areas?: string[] | null
          user_expertise_level?: string | null
          user_id?: string | null
          verification_notes?: string | null
          verified_by?: string | null
        }
        Update: {
          agrees_with_assessment?: boolean | null
          article_analysis_id?: string | null
          created_at?: string | null
          dimension_id?: string | null
          evidence_urls?: string[] | null
          feedback_text?: string | null
          feedback_type?: string
          guest_token?: string | null
          helpfulness_score?: number | null
          id?: string
          ip_address?: unknown | null
          is_spam?: boolean | null
          is_verified?: boolean | null
          organization_id?: string | null
          suggested_score?: number | null
          updated_at?: string | null
          user_agent?: string | null
          user_expertise_areas?: string[] | null
          user_expertise_level?: string | null
          user_id?: string | null
          verification_notes?: string | null
          verified_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "bias_feedback_article_analysis_id_fkey"
            columns: ["article_analysis_id"]
            isOneToOne: false
            referencedRelation: "article_bias_analysis"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "bias_feedback_dimension_id_fkey"
            columns: ["dimension_id"]
            isOneToOne: false
            referencedRelation: "bias_dimensions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "bias_feedback_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "media_organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      bias_learning_events: {
        Row: {
          article_count: number | null
          confidence_change: number | null
          consensus_strength: number | null
          created_at: string | null
          dimension_id: string | null
          event_type: string
          feedback_count: number | null
          id: string
          learning_algorithm_version: string | null
          new_score: number | null
          old_score: number | null
          organization_id: string | null
          trigger_id: string | null
          trigger_type: string | null
        }
        Insert: {
          article_count?: number | null
          confidence_change?: number | null
          consensus_strength?: number | null
          created_at?: string | null
          dimension_id?: string | null
          event_type: string
          feedback_count?: number | null
          id?: string
          learning_algorithm_version?: string | null
          new_score?: number | null
          old_score?: number | null
          organization_id?: string | null
          trigger_id?: string | null
          trigger_type?: string | null
        }
        Update: {
          article_count?: number | null
          confidence_change?: number | null
          consensus_strength?: number | null
          created_at?: string | null
          dimension_id?: string | null
          event_type?: string
          feedback_count?: number | null
          id?: string
          learning_algorithm_version?: string | null
          new_score?: number | null
          old_score?: number | null
          organization_id?: string | null
          trigger_id?: string | null
          trigger_type?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "bias_learning_events_dimension_id_fkey"
            columns: ["dimension_id"]
            isOneToOne: false
            referencedRelation: "bias_dimensions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "bias_learning_events_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "media_organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      bookmark_analytics: {
        Row: {
          bookmark_id: string | null
          created_at: string
          event_data: Json | null
          event_type: string
          id: string
          snippet_id: string | null
          user_id: string
        }
        Insert: {
          bookmark_id?: string | null
          created_at?: string
          event_data?: Json | null
          event_type: string
          id?: string
          snippet_id?: string | null
          user_id: string
        }
        Update: {
          bookmark_id?: string | null
          created_at?: string
          event_data?: Json | null
          event_type?: string
          id?: string
          snippet_id?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "bookmark_analytics_bookmark_id_fkey"
            columns: ["bookmark_id"]
            isOneToOne: false
            referencedRelation: "bookmarks"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "bookmark_analytics_snippet_id_fkey"
            columns: ["snippet_id"]
            isOneToOne: false
            referencedRelation: "bookmark_snippets"
            referencedColumns: ["id"]
          },
        ]
      }
      bookmark_collections: {
        Row: {
          color: string | null
          created_at: string
          description: string | null
          display_order: number | null
          emoji: string | null
          id: string
          is_public: boolean | null
          is_smart: boolean | null
          name: string
          parent_collection_id: string | null
          smart_criteria: Json | null
          updated_at: string
          user_id: string
        }
        Insert: {
          color?: string | null
          created_at?: string
          description?: string | null
          display_order?: number | null
          emoji?: string | null
          id?: string
          is_public?: boolean | null
          is_smart?: boolean | null
          name: string
          parent_collection_id?: string | null
          smart_criteria?: Json | null
          updated_at?: string
          user_id: string
        }
        Update: {
          color?: string | null
          created_at?: string
          description?: string | null
          display_order?: number | null
          emoji?: string | null
          id?: string
          is_public?: boolean | null
          is_smart?: boolean | null
          name?: string
          parent_collection_id?: string | null
          smart_criteria?: Json | null
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "bookmark_collections_parent_collection_id_fkey"
            columns: ["parent_collection_id"]
            isOneToOne: false
            referencedRelation: "bookmark_collections"
            referencedColumns: ["id"]
          },
        ]
      }
      bookmark_snippets: {
        Row: {
          ai_summary: string | null
          ai_tags: string[] | null
          bookmark_id: string | null
          collection_id: string | null
          created_at: string
          full_context: string | null
          highlight_color: string | null
          id: string
          paragraph_index: number | null
          selection_end: number | null
          selection_start: number | null
          snippet_text: string
          source_id: string | null
          source_title: string | null
          source_type: string | null
          source_url: string | null
          tags: string[] | null
          updated_at: string
          user_id: string
          user_notes: string | null
        }
        Insert: {
          ai_summary?: string | null
          ai_tags?: string[] | null
          bookmark_id?: string | null
          collection_id?: string | null
          created_at?: string
          full_context?: string | null
          highlight_color?: string | null
          id?: string
          paragraph_index?: number | null
          selection_end?: number | null
          selection_start?: number | null
          snippet_text: string
          source_id?: string | null
          source_title?: string | null
          source_type?: string | null
          source_url?: string | null
          tags?: string[] | null
          updated_at?: string
          user_id: string
          user_notes?: string | null
        }
        Update: {
          ai_summary?: string | null
          ai_tags?: string[] | null
          bookmark_id?: string | null
          collection_id?: string | null
          created_at?: string
          full_context?: string | null
          highlight_color?: string | null
          id?: string
          paragraph_index?: number | null
          selection_end?: number | null
          selection_start?: number | null
          snippet_text?: string
          source_id?: string | null
          source_title?: string | null
          source_type?: string | null
          source_url?: string | null
          tags?: string[] | null
          updated_at?: string
          user_id?: string
          user_notes?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "bookmark_snippets_bookmark_id_fkey"
            columns: ["bookmark_id"]
            isOneToOne: false
            referencedRelation: "bookmarks"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "bookmark_snippets_collection_id_fkey"
            columns: ["collection_id"]
            isOneToOne: false
            referencedRelation: "bookmark_collections"
            referencedColumns: ["id"]
          },
        ]
      }
      bookmark_tags: {
        Row: {
          color: string | null
          created_at: string
          id: string
          tag_name: string
          tag_slug: string
          usage_count: number | null
          user_id: string
        }
        Insert: {
          color?: string | null
          created_at?: string
          id?: string
          tag_name: string
          tag_slug: string
          usage_count?: number | null
          user_id: string
        }
        Update: {
          color?: string | null
          created_at?: string
          id?: string
          tag_name?: string
          tag_slug?: string
          usage_count?: number | null
          user_id?: string
        }
        Relationships: []
      }
      bookmarks: {
        Row: {
          access_count: number | null
          collection_id: string | null
          content_id: string | null
          content_type: string
          content_url: string | null
          created_at: string
          description: string | null
          id: string
          is_favorite: boolean | null
          last_accessed_at: string | null
          source_domain: string | null
          tags: string[] | null
          thumbnail_url: string | null
          title: string
          updated_at: string
          user_id: string
          user_notes: string | null
        }
        Insert: {
          access_count?: number | null
          collection_id?: string | null
          content_id?: string | null
          content_type: string
          content_url?: string | null
          created_at?: string
          description?: string | null
          id?: string
          is_favorite?: boolean | null
          last_accessed_at?: string | null
          source_domain?: string | null
          tags?: string[] | null
          thumbnail_url?: string | null
          title: string
          updated_at?: string
          user_id: string
          user_notes?: string | null
        }
        Update: {
          access_count?: number | null
          collection_id?: string | null
          content_id?: string | null
          content_type?: string
          content_url?: string | null
          created_at?: string
          description?: string | null
          id?: string
          is_favorite?: boolean | null
          last_accessed_at?: string | null
          source_domain?: string | null
          tags?: string[] | null
          thumbnail_url?: string | null
          title?: string
          updated_at?: string
          user_id?: string
          user_notes?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "bookmarks_collection_id_fkey"
            columns: ["collection_id"]
            isOneToOne: false
            referencedRelation: "bookmark_collections"
            referencedColumns: ["id"]
          },
        ]
      }
      boost_definitions: {
        Row: {
          boost_type: string
          category: string
          cooldown_hours: number | null
          created_at: string | null
          description: string
          duration: number | null
          emoji: string
          icon: string
          is_active: boolean | null
          level_requirement: number | null
          max_uses: number | null
          name: string
          rarity: string
          tags: string[] | null
          updated_at: string | null
          xp_cost: number
        }
        Insert: {
          boost_type: string
          category: string
          cooldown_hours?: number | null
          created_at?: string | null
          description: string
          duration?: number | null
          emoji: string
          icon: string
          is_active?: boolean | null
          level_requirement?: number | null
          max_uses?: number | null
          name: string
          rarity: string
          tags?: string[] | null
          updated_at?: string | null
          xp_cost: number
        }
        Update: {
          boost_type?: string
          category?: string
          cooldown_hours?: number | null
          created_at?: string | null
          description?: string
          duration?: number | null
          emoji?: string
          icon?: string
          is_active?: boolean | null
          level_requirement?: number | null
          max_uses?: number | null
          name?: string
          rarity?: string
          tags?: string[] | null
          updated_at?: string | null
          xp_cost?: number
        }
        Relationships: []
      }
      categories: {
        Row: {
          created_at: string | null
          description: string | null
          display_order: number | null
          emoji: string
          id: string
          is_active: boolean | null
          name: string
          translations: Json | null
        }
        Insert: {
          created_at?: string | null
          description?: string | null
          display_order?: number | null
          emoji: string
          id?: string
          is_active?: boolean | null
          name: string
          translations?: Json | null
        }
        Update: {
          created_at?: string | null
          description?: string | null
          display_order?: number | null
          emoji?: string
          id?: string
          is_active?: boolean | null
          name?: string
          translations?: Json | null
        }
        Relationships: []
      }
      category_synonyms: {
        Row: {
          alias: string
          category_id: string | null
          is_active: boolean | null
        }
        Insert: {
          alias: string
          category_id?: string | null
          is_active?: boolean | null
        }
        Update: {
          alias?: string
          category_id?: string | null
          is_active?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "category_synonyms_category_id_fkey"
            columns: ["category_id"]
            isOneToOne: false
            referencedRelation: "categories"
            referencedColumns: ["id"]
          },
        ]
      }
      civics_test_analytics: {
        Row: {
          event_type: string
          guest_token: string | null
          id: string
          ip_address: unknown | null
          metadata: Json | null
          score: number | null
          session_id: string
          timestamp: string
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          event_type: string
          guest_token?: string | null
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          score?: number | null
          session_id: string
          timestamp?: string
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          event_type?: string
          guest_token?: string | null
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          score?: number | null
          session_id?: string
          timestamp?: string
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      clever_user_mapping: {
        Row: {
          civicsense_user_id: string | null
          clever_email: string | null
          clever_user_id: string
          created_at: string
          first_name: string | null
          id: string
          last_name: string | null
          role: string | null
          school_id: string | null
        }
        Insert: {
          civicsense_user_id?: string | null
          clever_email?: string | null
          clever_user_id: string
          created_at?: string
          first_name?: string | null
          id?: string
          last_name?: string | null
          role?: string | null
          school_id?: string | null
        }
        Update: {
          civicsense_user_id?: string | null
          clever_email?: string | null
          clever_user_id?: string
          created_at?: string
          first_name?: string | null
          id?: string
          last_name?: string | null
          role?: string | null
          school_id?: string | null
        }
        Relationships: []
      }
      content_filtering_rules: {
        Row: {
          age_range: string
          blocked_categories: string[] | null
          blocked_keywords: string[] | null
          blocked_topics: string[] | null
          created_at: string | null
          filter_level: string
          id: string
          is_active: boolean | null
          max_difficulty_level: number | null
          rule_name: string
          sensitive_topics: Json | null
        }
        Insert: {
          age_range: string
          blocked_categories?: string[] | null
          blocked_keywords?: string[] | null
          blocked_topics?: string[] | null
          created_at?: string | null
          filter_level: string
          id?: string
          is_active?: boolean | null
          max_difficulty_level?: number | null
          rule_name: string
          sensitive_topics?: Json | null
        }
        Update: {
          age_range?: string
          blocked_categories?: string[] | null
          blocked_keywords?: string[] | null
          blocked_topics?: string[] | null
          created_at?: string | null
          filter_level?: string
          id?: string
          is_active?: boolean | null
          max_difficulty_level?: number | null
          rule_name?: string
          sensitive_topics?: Json | null
        }
        Relationships: []
      }
      content_generation_queue: {
        Row: {
          assigned_worker: string | null
          completed_at: string | null
          created_at: string
          error_message: string | null
          estimated_duration_ms: number | null
          execution_log_id: string | null
          expires_at: string
          generation_params: Json
          generation_type: string
          id: string
          max_retries: number
          priority: number
          process_after: string
          result_data: Json | null
          retry_count: number
          scheduled_job_id: string | null
          started_at: string | null
          status: string
          updated_at: string
        }
        Insert: {
          assigned_worker?: string | null
          completed_at?: string | null
          created_at?: string
          error_message?: string | null
          estimated_duration_ms?: number | null
          execution_log_id?: string | null
          expires_at?: string
          generation_params: Json
          generation_type: string
          id?: string
          max_retries?: number
          priority?: number
          process_after?: string
          result_data?: Json | null
          retry_count?: number
          scheduled_job_id?: string | null
          started_at?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          assigned_worker?: string | null
          completed_at?: string | null
          created_at?: string
          error_message?: string | null
          estimated_duration_ms?: number | null
          execution_log_id?: string | null
          expires_at?: string
          generation_params?: Json
          generation_type?: string
          id?: string
          max_retries?: number
          priority?: number
          process_after?: string
          result_data?: Json | null
          retry_count?: number
          scheduled_job_id?: string | null
          started_at?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "content_generation_queue_execution_log_id_fkey"
            columns: ["execution_log_id"]
            isOneToOne: false
            referencedRelation: "job_execution_logs"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "content_generation_queue_scheduled_job_id_fkey"
            columns: ["scheduled_job_id"]
            isOneToOne: false
            referencedRelation: "scheduled_content_jobs"
            referencedColumns: ["id"]
          },
        ]
      }
      content_preview_cache: {
        Row: {
          access_count: number
          cache_key: string
          cache_type: string
          created_at: string
          created_by: string | null
          expires_at: string
          generation_settings: Json
          id: string
          last_accessed_at: string
          preview_data: Json
        }
        Insert: {
          access_count?: number
          cache_key: string
          cache_type: string
          created_at?: string
          created_by?: string | null
          expires_at?: string
          generation_settings: Json
          id?: string
          last_accessed_at?: string
          preview_data: Json
        }
        Update: {
          access_count?: number
          cache_key?: string
          cache_type?: string
          created_at?: string
          created_by?: string | null
          expires_at?: string
          generation_settings?: Json
          id?: string
          last_accessed_at?: string
          preview_data?: Json
        }
        Relationships: []
      }
      events: {
        Row: {
          created_at: string | null
          date: string
          description: string
          id: string | null
          is_active: boolean | null
          sources: Json | null
          topic_id: string
          topic_title: string
          updated_at: string | null
          why_this_matters: string
        }
        Insert: {
          created_at?: string | null
          date: string
          description: string
          id?: string | null
          is_active?: boolean | null
          sources?: Json | null
          topic_id: string
          topic_title: string
          updated_at?: string | null
          why_this_matters: string
        }
        Update: {
          created_at?: string | null
          date?: string
          description?: string
          id?: string | null
          is_active?: boolean | null
          sources?: Json | null
          topic_id?: string
          topic_title?: string
          updated_at?: string | null
          why_this_matters?: string
        }
        Relationships: []
      }
      fact_check_logs: {
        Row: {
          ai_reasoning: string | null
          changes_applied: boolean | null
          check_date: string | null
          confidence_score: number | null
          created_at: string | null
          human_reviewer: string | null
          id: string
          issues_found: string[] | null
          question_id: string | null
        }
        Insert: {
          ai_reasoning?: string | null
          changes_applied?: boolean | null
          check_date?: string | null
          confidence_score?: number | null
          created_at?: string | null
          human_reviewer?: string | null
          id?: string
          issues_found?: string[] | null
          question_id?: string | null
        }
        Update: {
          ai_reasoning?: string | null
          changes_applied?: boolean | null
          check_date?: string | null
          confidence_score?: number | null
          created_at?: string | null
          human_reviewer?: string | null
          id?: string
          issues_found?: string[] | null
          question_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "fact_check_logs_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "question_feedback_stats"
            referencedColumns: ["question_id"]
          },
          {
            foreignKeyName: "fact_check_logs_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "question_response_stats"
            referencedColumns: ["question_id"]
          },
          {
            foreignKeyName: "fact_check_logs_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "question_sources_enhanced"
            referencedColumns: ["question_id"]
          },
          {
            foreignKeyName: "fact_check_logs_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "question_topics_with_questions"
            referencedColumns: ["question_id"]
          },
          {
            foreignKeyName: "fact_check_logs_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "questions"
            referencedColumns: ["id"]
          },
        ]
      }
      figure_events: {
        Row: {
          created_at: string | null
          event_date: string
          event_description: string | null
          event_title: string
          event_type: string
          figure_id: string | null
          id: string
          media_coverage_scale: string | null
          policy_areas: string[] | null
          quiz_potential: number | null
          related_figures: string[] | null
          significance_level: number | null
          sources: Json | null
        }
        Insert: {
          created_at?: string | null
          event_date: string
          event_description?: string | null
          event_title: string
          event_type: string
          figure_id?: string | null
          id?: string
          media_coverage_scale?: string | null
          policy_areas?: string[] | null
          quiz_potential?: number | null
          related_figures?: string[] | null
          significance_level?: number | null
          sources?: Json | null
        }
        Update: {
          created_at?: string | null
          event_date?: string
          event_description?: string | null
          event_title?: string
          event_type?: string
          figure_id?: string | null
          id?: string
          media_coverage_scale?: string | null
          policy_areas?: string[] | null
          quiz_potential?: number | null
          related_figures?: string[] | null
          significance_level?: number | null
          sources?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "figure_events_figure_id_fkey"
            columns: ["figure_id"]
            isOneToOne: false
            referencedRelation: "public_figures"
            referencedColumns: ["id"]
          },
        ]
      }
      figure_organizations: {
        Row: {
          appointment_announcement_url: string | null
          compensation_type: string | null
          created_at: string | null
          end_date: string | null
          figure_id: string | null
          id: string
          influence_within_org: number | null
          is_active: boolean | null
          organization_id: string | null
          public_visibility: string | null
          role_description: string | null
          role_title: string | null
          role_type: string | null
          sources: Json | null
          start_date: string | null
          updated_at: string | null
        }
        Insert: {
          appointment_announcement_url?: string | null
          compensation_type?: string | null
          created_at?: string | null
          end_date?: string | null
          figure_id?: string | null
          id?: string
          influence_within_org?: number | null
          is_active?: boolean | null
          organization_id?: string | null
          public_visibility?: string | null
          role_description?: string | null
          role_title?: string | null
          role_type?: string | null
          sources?: Json | null
          start_date?: string | null
          updated_at?: string | null
        }
        Update: {
          appointment_announcement_url?: string | null
          compensation_type?: string | null
          created_at?: string | null
          end_date?: string | null
          figure_id?: string | null
          id?: string
          influence_within_org?: number | null
          is_active?: boolean | null
          organization_id?: string | null
          public_visibility?: string | null
          role_description?: string | null
          role_title?: string | null
          role_type?: string | null
          sources?: Json | null
          start_date?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "figure_organizations_figure_id_fkey"
            columns: ["figure_id"]
            isOneToOne: false
            referencedRelation: "public_figures"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "figure_organizations_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      figure_policy_positions: {
        Row: {
          certainty_level: string | null
          consistency_score: number | null
          created_at: string | null
          figure_id: string | null
          id: string
          policy_area: string
          position_date: string | null
          position_description: string
          public_statement_url: string | null
          sources: Json | null
          specific_policy: string | null
          updated_at: string | null
          voting_record_evidence: Json | null
        }
        Insert: {
          certainty_level?: string | null
          consistency_score?: number | null
          created_at?: string | null
          figure_id?: string | null
          id?: string
          policy_area: string
          position_date?: string | null
          position_description: string
          public_statement_url?: string | null
          sources?: Json | null
          specific_policy?: string | null
          updated_at?: string | null
          voting_record_evidence?: Json | null
        }
        Update: {
          certainty_level?: string | null
          consistency_score?: number | null
          created_at?: string | null
          figure_id?: string | null
          id?: string
          policy_area?: string
          position_date?: string | null
          position_description?: string
          public_statement_url?: string | null
          sources?: Json | null
          specific_policy?: string | null
          updated_at?: string | null
          voting_record_evidence?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "figure_policy_positions_figure_id_fkey"
            columns: ["figure_id"]
            isOneToOne: false
            referencedRelation: "public_figures"
            referencedColumns: ["id"]
          },
        ]
      }
      figure_quiz_topics: {
        Row: {
          content_themes: string[] | null
          created_at: string | null
          difficulty_distribution: Json | null
          featured_figures: string[] | null
          focus_type: string
          id: string
          network_depth: number | null
          performance_metrics: Json | null
          primary_figure_id: string | null
          topic_id: string | null
        }
        Insert: {
          content_themes?: string[] | null
          created_at?: string | null
          difficulty_distribution?: Json | null
          featured_figures?: string[] | null
          focus_type: string
          id?: string
          network_depth?: number | null
          performance_metrics?: Json | null
          primary_figure_id?: string | null
          topic_id?: string | null
        }
        Update: {
          content_themes?: string[] | null
          created_at?: string | null
          difficulty_distribution?: Json | null
          featured_figures?: string[] | null
          focus_type?: string
          id?: string
          network_depth?: number | null
          performance_metrics?: Json | null
          primary_figure_id?: string | null
          topic_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "figure_quiz_topics_primary_figure_id_fkey"
            columns: ["primary_figure_id"]
            isOneToOne: false
            referencedRelation: "public_figures"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "figure_quiz_topics_topic_id_fkey"
            columns: ["topic_id"]
            isOneToOne: false
            referencedRelation: "question_topics"
            referencedColumns: ["topic_id"]
          },
          {
            foreignKeyName: "figure_quiz_topics_topic_id_fkey"
            columns: ["topic_id"]
            isOneToOne: false
            referencedRelation: "question_topics_with_questions"
            referencedColumns: ["topic_identifier"]
          },
          {
            foreignKeyName: "figure_quiz_topics_topic_id_fkey"
            columns: ["topic_id"]
            isOneToOne: false
            referencedRelation: "question_topics_without_questions"
            referencedColumns: ["topic_id"]
          },
        ]
      }
      figure_relationships: {
        Row: {
          created_at: string | null
          description: string | null
          evidence_sources: Json | null
          figure_a_id: string | null
          figure_b_id: string | null
          financial_connections: Json | null
          id: string
          is_active: boolean | null
          is_public: boolean | null
          key_interactions: Json | null
          policy_alignments: string[] | null
          relationship_direction: string | null
          relationship_end_date: string | null
          relationship_start_date: string | null
          relationship_strength: number | null
          relationship_type: string
          updated_at: string | null
          verification_status: string | null
        }
        Insert: {
          created_at?: string | null
          description?: string | null
          evidence_sources?: Json | null
          figure_a_id?: string | null
          figure_b_id?: string | null
          financial_connections?: Json | null
          id?: string
          is_active?: boolean | null
          is_public?: boolean | null
          key_interactions?: Json | null
          policy_alignments?: string[] | null
          relationship_direction?: string | null
          relationship_end_date?: string | null
          relationship_start_date?: string | null
          relationship_strength?: number | null
          relationship_type: string
          updated_at?: string | null
          verification_status?: string | null
        }
        Update: {
          created_at?: string | null
          description?: string | null
          evidence_sources?: Json | null
          figure_a_id?: string | null
          figure_b_id?: string | null
          financial_connections?: Json | null
          id?: string
          is_active?: boolean | null
          is_public?: boolean | null
          key_interactions?: Json | null
          policy_alignments?: string[] | null
          relationship_direction?: string | null
          relationship_end_date?: string | null
          relationship_start_date?: string | null
          relationship_strength?: number | null
          relationship_type?: string
          updated_at?: string | null
          verification_status?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "figure_relationships_figure_a_id_fkey"
            columns: ["figure_a_id"]
            isOneToOne: false
            referencedRelation: "public_figures"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "figure_relationships_figure_b_id_fkey"
            columns: ["figure_b_id"]
            isOneToOne: false
            referencedRelation: "public_figures"
            referencedColumns: ["id"]
          },
        ]
      }
      friend_requests: {
        Row: {
          approved_by: string | null
          created_at: string | null
          expires_at: string | null
          id: string
          message: string | null
          parent_approved_at: string | null
          pod_id: string | null
          recipient_id: string
          request_type: string | null
          requester_id: string
          requires_parental_approval: boolean | null
          responded_at: string | null
          status: string | null
        }
        Insert: {
          approved_by?: string | null
          created_at?: string | null
          expires_at?: string | null
          id?: string
          message?: string | null
          parent_approved_at?: string | null
          pod_id?: string | null
          recipient_id: string
          request_type?: string | null
          requester_id: string
          requires_parental_approval?: boolean | null
          responded_at?: string | null
          status?: string | null
        }
        Update: {
          approved_by?: string | null
          created_at?: string | null
          expires_at?: string | null
          id?: string
          message?: string | null
          parent_approved_at?: string | null
          pod_id?: string | null
          recipient_id?: string
          request_type?: string | null
          requester_id?: string
          requires_parental_approval?: boolean | null
          responded_at?: string | null
          status?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "friend_requests_pod_id_fkey"
            columns: ["pod_id"]
            isOneToOne: false
            referencedRelation: "learning_pods"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "friend_requests_pod_id_fkey"
            columns: ["pod_id"]
            isOneToOne: false
            referencedRelation: "pod_discovery"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "friend_requests_pod_id_fkey"
            columns: ["pod_id"]
            isOneToOne: false
            referencedRelation: "pod_discovery"
            referencedColumns: ["pod_id"]
          },
        ]
      }
      gift_credits: {
        Row: {
          created_at: string | null
          credit_type: string
          credits_available: number
          credits_used: number
          donor_user_id: string
          id: string
          source_donation_amount: number
          source_stripe_session_id: string | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          credit_type: string
          credits_available?: number
          credits_used?: number
          donor_user_id: string
          id?: string
          source_donation_amount: number
          source_stripe_session_id?: string | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          credit_type?: string
          credits_available?: number
          credits_used?: number
          donor_user_id?: string
          id?: string
          source_donation_amount?: number
          source_stripe_session_id?: string | null
          updated_at?: string | null
        }
        Relationships: []
      }
      gift_redemptions: {
        Row: {
          access_type: string
          claimed_at: string | null
          created_at: string | null
          donor_user_id: string
          expires_at: string | null
          gift_credit_id: string
          gift_message: string | null
          id: string
          recipient_email: string
          recipient_user_id: string | null
          redemption_code: string
          redemption_status: string
          updated_at: string | null
        }
        Insert: {
          access_type: string
          claimed_at?: string | null
          created_at?: string | null
          donor_user_id: string
          expires_at?: string | null
          gift_credit_id: string
          gift_message?: string | null
          id?: string
          recipient_email: string
          recipient_user_id?: string | null
          redemption_code: string
          redemption_status?: string
          updated_at?: string | null
        }
        Update: {
          access_type?: string
          claimed_at?: string | null
          created_at?: string | null
          donor_user_id?: string
          expires_at?: string | null
          gift_credit_id?: string
          gift_message?: string | null
          id?: string
          recipient_email?: string
          recipient_user_id?: string | null
          redemption_code?: string
          redemption_status?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "gift_redemptions_gift_credit_id_fkey"
            columns: ["gift_credit_id"]
            isOneToOne: false
            referencedRelation: "gift_credits"
            referencedColumns: ["id"]
          },
        ]
      }
      glossary_terms: {
        Row: {
          category: string | null
          created_at: string
          definition: string
          examples: Json | null
          id: string
          is_active: boolean | null
          part_of_speech: string | null
          synonyms: string[] | null
          term: string
          updated_at: string
        }
        Insert: {
          category?: string | null
          created_at?: string
          definition: string
          examples?: Json | null
          id?: string
          is_active?: boolean | null
          part_of_speech?: string | null
          synonyms?: string[] | null
          term: string
          updated_at?: string
        }
        Update: {
          category?: string | null
          created_at?: string
          definition?: string
          examples?: Json | null
          id?: string
          is_active?: boolean | null
          part_of_speech?: string | null
          synonyms?: string[] | null
          term?: string
          updated_at?: string
        }
        Relationships: []
      }
      guest_civics_test_results: {
        Row: {
          answers: Json | null
          category_breakdown: Json | null
          completed_at: string
          converted_at: string | null
          converted_user_id: string | null
          guest_token: string
          id: string
          ip_address: unknown | null
          level: string
          score: number
          session_id: string
          test_type: string
          user_agent: string | null
        }
        Insert: {
          answers?: Json | null
          category_breakdown?: Json | null
          completed_at?: string
          converted_at?: string | null
          converted_user_id?: string | null
          guest_token: string
          id?: string
          ip_address?: unknown | null
          level: string
          score: number
          session_id: string
          test_type: string
          user_agent?: string | null
        }
        Update: {
          answers?: Json | null
          category_breakdown?: Json | null
          completed_at?: string
          converted_at?: string | null
          converted_user_id?: string | null
          guest_token?: string
          id?: string
          ip_address?: unknown | null
          level?: string
          score?: number
          session_id?: string
          test_type?: string
          user_agent?: string | null
        }
        Relationships: []
      }
      guest_usage_analytics: {
        Row: {
          attempts: number
          created_at: string | null
          date: string
          guest_token: string
          id: string
          ip: string
          timestamp: string
        }
        Insert: {
          attempts?: number
          created_at?: string | null
          date: string
          guest_token: string
          id?: string
          ip: string
          timestamp?: string
        }
        Update: {
          attempts?: number
          created_at?: string | null
          date?: string
          guest_token?: string
          id?: string
          ip?: string
          timestamp?: string
        }
        Relationships: []
      }
      guest_usage_tracking: {
        Row: {
          attempts: number
          created_at: string | null
          date: string
          firstSeen: string
          id: string
          ip: string
          lastSeen: string
          tokens: string[]
          updated_at: string | null
        }
        Insert: {
          attempts?: number
          created_at?: string | null
          date: string
          firstSeen?: string
          id?: string
          ip: string
          lastSeen?: string
          tokens?: string[]
          updated_at?: string | null
        }
        Update: {
          attempts?: number
          created_at?: string | null
          date?: string
          firstSeen?: string
          id?: string
          ip?: string
          lastSeen?: string
          tokens?: string[]
          updated_at?: string | null
        }
        Relationships: []
      }
      image_ab_test_results: {
        Row: {
          created_at: string
          engagement_type: string | null
          engagement_value: number | null
          id: string
          image_id: string | null
          session_id: string | null
          test_name: string
          user_id: string | null
          variant: string
        }
        Insert: {
          created_at?: string
          engagement_type?: string | null
          engagement_value?: number | null
          id?: string
          image_id?: string | null
          session_id?: string | null
          test_name: string
          user_id?: string | null
          variant: string
        }
        Update: {
          created_at?: string
          engagement_type?: string | null
          engagement_value?: number | null
          id?: string
          image_id?: string | null
          session_id?: string | null
          test_name?: string
          user_id?: string | null
          variant?: string
        }
        Relationships: [
          {
            foreignKeyName: "image_ab_test_results_image_id_fkey"
            columns: ["image_id"]
            isOneToOne: false
            referencedRelation: "image_generation_analytics"
            referencedColumns: ["id"]
          },
        ]
      }
      image_generation_analytics: {
        Row: {
          content_type: string
          created_at: string
          error_message: string | null
          generation_time_ms: number
          id: string
          session_id: string | null
          success: boolean
          template: string
          theme: string
          user_id: string | null
          variant: string
        }
        Insert: {
          content_type: string
          created_at?: string
          error_message?: string | null
          generation_time_ms: number
          id?: string
          session_id?: string | null
          success?: boolean
          template: string
          theme?: string
          user_id?: string | null
          variant?: string
        }
        Update: {
          content_type?: string
          created_at?: string
          error_message?: string | null
          generation_time_ms?: number
          id?: string
          session_id?: string | null
          success?: boolean
          template?: string
          theme?: string
          user_id?: string | null
          variant?: string
        }
        Relationships: []
      }
      job_execution_logs: {
        Row: {
          completed_at: string | null
          content_generated: number | null
          created_at: string
          error_details: Json | null
          error_message: string | null
          execution_metadata: Json | null
          execution_time_ms: number | null
          id: string
          job_id: string
          questions_created: number | null
          stack_trace: string | null
          started_at: string
          status: string
          topics_created: number | null
        }
        Insert: {
          completed_at?: string | null
          content_generated?: number | null
          created_at?: string
          error_details?: Json | null
          error_message?: string | null
          execution_metadata?: Json | null
          execution_time_ms?: number | null
          id?: string
          job_id: string
          questions_created?: number | null
          stack_trace?: string | null
          started_at?: string
          status?: string
          topics_created?: number | null
        }
        Update: {
          completed_at?: string | null
          content_generated?: number | null
          created_at?: string
          error_details?: Json | null
          error_message?: string | null
          execution_metadata?: Json | null
          execution_time_ms?: number | null
          id?: string
          job_id?: string
          questions_created?: number | null
          stack_trace?: string | null
          started_at?: string
          status?: string
          topics_created?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "job_execution_logs_job_id_fkey"
            columns: ["job_id"]
            isOneToOne: false
            referencedRelation: "scheduled_content_jobs"
            referencedColumns: ["id"]
          },
        ]
      }
      key_policy_positions: {
        Row: {
          category_id: string
          created_at: string | null
          description: string | null
          display_order: number
          id: string
          is_active: boolean | null
          spectrum: string
          stance_label: string
          updated_at: string | null
        }
        Insert: {
          category_id: string
          created_at?: string | null
          description?: string | null
          display_order?: never
          id?: string
          is_active?: boolean | null
          spectrum: string
          stance_label: string
          updated_at?: string | null
        }
        Update: {
          category_id?: string
          created_at?: string | null
          description?: string | null
          display_order?: never
          id?: string
          is_active?: boolean | null
          spectrum?: string
          stance_label?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "key_policy_positions_category_id_fkey"
            columns: ["category_id"]
            isOneToOne: false
            referencedRelation: "categories"
            referencedColumns: ["id"]
          },
        ]
      }
      learning_objectives: {
        Row: {
          created_at: string
          display_order: number | null
          id: string
          mastery_level_required: string | null
          objective_text: string
          objective_type: string
          skill_id: string
        }
        Insert: {
          created_at?: string
          display_order?: number | null
          id?: string
          mastery_level_required?: string | null
          objective_text: string
          objective_type?: string
          skill_id: string
        }
        Update: {
          created_at?: string
          display_order?: number | null
          id?: string
          mastery_level_required?: string | null
          objective_text?: string
          objective_type?: string
          skill_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "learning_objectives_skill_id_fkey"
            columns: ["skill_id"]
            isOneToOne: false
            referencedRelation: "skills"
            referencedColumns: ["id"]
          },
        ]
      }
      learning_pods: {
        Row: {
          accessibility_mode: string | null
          activity_score: number | null
          alert_on_inappropriate_content: boolean | null
          allow_sensitive_topics: boolean | null
          allowed_age_range: string | null
          allowed_days: number[] | null
          allowed_end_time: string | null
          allowed_start_time: string | null
          archived_at: string | null
          archived_by: string | null
          average_rating: number | null
          banner_image_url: string | null
          blocked_categories: string[] | null
          can_access_chat: boolean | null
          can_access_multiplayer: boolean | null
          can_share_progress: boolean | null
          can_view_leaderboards: boolean | null
          challenge_participation: Json | null
          classroom_course_id: string | null
          classroom_integration_enabled: boolean | null
          clever_last_sync: string | null
          clever_section_id: string | null
          clever_sync_enabled: boolean
          clever_sync_errors: Json | null
          content_filter_level: string | null
          created_at: string | null
          created_by: string
          custom_type_label: string | null
          daily_time_limit_minutes: number | null
          description: string | null
          display_name: string | null
          family_name: string | null
          grade_passback_enabled: boolean | null
          id: string
          is_featured: boolean | null
          is_private: boolean | null
          is_public: boolean | null
          join_code: string | null
          lms_platform: "google_classroom" | "clever" | null
          max_difficulty_level: number | null
          max_members: number | null
          milestone_data: Json | null
          parent_email: string | null
          partnership_status: string | null
          personality_type: string | null
          pod_color: string | null
          pod_description: string | null
          pod_emoji: string | null
          pod_motto: string | null
          pod_name: string
          pod_slug: string | null
          pod_type: string
          report_frequency: string | null
          require_parent_approval_for_friends: boolean | null
          roster_last_synced: string | null
          search_tags: string[] | null
          send_progress_reports: boolean | null
          short_description: string | null
          target_age_range: string | null
          theme_id: string | null
          topics_covered: string[] | null
          total_ratings: number | null
          track_detailed_activity: boolean | null
          unlocked_features: Json | null
          updated_at: string | null
        }
        Insert: {
          accessibility_mode?: string | null
          activity_score?: number | null
          alert_on_inappropriate_content?: boolean | null
          allow_sensitive_topics?: boolean | null
          allowed_age_range?: string | null
          allowed_days?: number[] | null
          allowed_end_time?: string | null
          allowed_start_time?: string | null
          archived_at?: string | null
          archived_by?: string | null
          average_rating?: number | null
          banner_image_url?: string | null
          blocked_categories?: string[] | null
          can_access_chat?: boolean | null
          can_access_multiplayer?: boolean | null
          can_share_progress?: boolean | null
          can_view_leaderboards?: boolean | null
          challenge_participation?: Json | null
          classroom_course_id?: string | null
          classroom_integration_enabled?: boolean | null
          clever_last_sync?: string | null
          clever_section_id?: string | null
          clever_sync_enabled?: boolean
          clever_sync_errors?: Json | null
          content_filter_level?: string | null
          created_at?: string | null
          created_by: string
          custom_type_label?: string | null
          daily_time_limit_minutes?: number | null
          description?: string | null
          display_name?: string | null
          family_name?: string | null
          grade_passback_enabled?: boolean | null
          id?: string
          is_featured?: boolean | null
          is_private?: boolean | null
          is_public?: boolean | null
          join_code?: string | null
          lms_platform?: "google_classroom" | "clever" | null
          max_difficulty_level?: number | null
          max_members?: number | null
          milestone_data?: Json | null
          parent_email?: string | null
          partnership_status?: string | null
          personality_type?: string | null
          pod_color?: string | null
          pod_description?: string | null
          pod_emoji?: string | null
          pod_motto?: string | null
          pod_name: string
          pod_slug?: string | null
          pod_type?: string
          report_frequency?: string | null
          require_parent_approval_for_friends?: boolean | null
          roster_last_synced?: string | null
          search_tags?: string[] | null
          send_progress_reports?: boolean | null
          short_description?: string | null
          target_age_range?: string | null
          theme_id?: string | null
          topics_covered?: string[] | null
          total_ratings?: number | null
          track_detailed_activity?: boolean | null
          unlocked_features?: Json | null
          updated_at?: string | null
        }
        Update: {
          accessibility_mode?: string | null
          activity_score?: number | null
          alert_on_inappropriate_content?: boolean | null
          allow_sensitive_topics?: boolean | null
          allowed_age_range?: string | null
          allowed_days?: number[] | null
          allowed_end_time?: string | null
          allowed_start_time?: string | null
          archived_at?: string | null
          archived_by?: string | null
          average_rating?: number | null
          banner_image_url?: string | null
          blocked_categories?: string[] | null
          can_access_chat?: boolean | null
          can_access_multiplayer?: boolean | null
          can_share_progress?: boolean | null
          can_view_leaderboards?: boolean | null
          challenge_participation?: Json | null
          classroom_course_id?: string | null
          classroom_integration_enabled?: boolean | null
          clever_last_sync?: string | null
          clever_section_id?: string | null
          clever_sync_enabled?: boolean
          clever_sync_errors?: Json | null
          content_filter_level?: string | null
          created_at?: string | null
          created_by?: string
          custom_type_label?: string | null
          daily_time_limit_minutes?: number | null
          description?: string | null
          display_name?: string | null
          family_name?: string | null
          grade_passback_enabled?: boolean | null
          id?: string
          is_featured?: boolean | null
          is_private?: boolean | null
          is_public?: boolean | null
          join_code?: string | null
          lms_platform?: "google_classroom" | "clever" | null
          max_difficulty_level?: number | null
          max_members?: number | null
          milestone_data?: Json | null
          parent_email?: string | null
          partnership_status?: string | null
          personality_type?: string | null
          pod_color?: string | null
          pod_description?: string | null
          pod_emoji?: string | null
          pod_motto?: string | null
          pod_name?: string
          pod_slug?: string | null
          pod_type?: string
          report_frequency?: string | null
          require_parent_approval_for_friends?: boolean | null
          roster_last_synced?: string | null
          search_tags?: string[] | null
          send_progress_reports?: boolean | null
          short_description?: string | null
          target_age_range?: string | null
          theme_id?: string | null
          topics_covered?: string[] | null
          total_ratings?: number | null
          track_detailed_activity?: boolean | null
          unlocked_features?: Json | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "learning_pods_theme_id_fkey"
            columns: ["theme_id"]
            isOneToOne: false
            referencedRelation: "pod_themes"
            referencedColumns: ["id"]
          },
        ]
      }
      media_organizations: {
        Row: {
          alternate_domains: string[] | null
          corrections_policy: string | null
          created_at: string | null
          credibility_rating: number | null
          description: string | null
          domain: string | null
          editorial_stance: string | null
          fact_checking_methodology: string | null
          founding_year: number | null
          funding_sources: Json | null
          headquarters_location: string | null
          id: string
          is_active: boolean | null
          logo_url: string | null
          name: string
          organization_type: string
          ownership_structure: string | null
          parent_organization_id: string | null
          social_media_links: Json | null
          stated_values: string[] | null
          transparency_score: number | null
          updated_at: string | null
          website_url: string | null
        }
        Insert: {
          alternate_domains?: string[] | null
          corrections_policy?: string | null
          created_at?: string | null
          credibility_rating?: number | null
          description?: string | null
          domain?: string | null
          editorial_stance?: string | null
          fact_checking_methodology?: string | null
          founding_year?: number | null
          funding_sources?: Json | null
          headquarters_location?: string | null
          id?: string
          is_active?: boolean | null
          logo_url?: string | null
          name: string
          organization_type?: string
          ownership_structure?: string | null
          parent_organization_id?: string | null
          social_media_links?: Json | null
          stated_values?: string[] | null
          transparency_score?: number | null
          updated_at?: string | null
          website_url?: string | null
        }
        Update: {
          alternate_domains?: string[] | null
          corrections_policy?: string | null
          created_at?: string | null
          credibility_rating?: number | null
          description?: string | null
          domain?: string | null
          editorial_stance?: string | null
          fact_checking_methodology?: string | null
          founding_year?: number | null
          funding_sources?: Json | null
          headquarters_location?: string | null
          id?: string
          is_active?: boolean | null
          logo_url?: string | null
          name?: string
          organization_type?: string
          ownership_structure?: string | null
          parent_organization_id?: string | null
          social_media_links?: Json | null
          stated_values?: string[] | null
          transparency_score?: number | null
          updated_at?: string | null
          website_url?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "media_organizations_parent_organization_id_fkey"
            columns: ["parent_organization_id"]
            isOneToOne: false
            referencedRelation: "media_organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      member_individual_settings: {
        Row: {
          alert_on_inappropriate_content: boolean | null
          allowed_days: number[] | null
          allowed_end_time: string | null
          allowed_start_time: string | null
          blocked_categories: string[] | null
          can_access_chat: boolean | null
          can_access_multiplayer: boolean | null
          can_share_progress: boolean | null
          can_view_leaderboards: boolean | null
          content_filter_level: string | null
          created_at: string
          daily_time_limit_minutes: number | null
          id: string
          max_difficulty_level: number | null
          override_content_filter: boolean | null
          override_feature_access: boolean | null
          override_monitoring: boolean | null
          override_time_limits: boolean | null
          pod_id: string
          report_frequency: string | null
          send_progress_reports: boolean | null
          updated_at: string
          user_id: string
        }
        Insert: {
          alert_on_inappropriate_content?: boolean | null
          allowed_days?: number[] | null
          allowed_end_time?: string | null
          allowed_start_time?: string | null
          blocked_categories?: string[] | null
          can_access_chat?: boolean | null
          can_access_multiplayer?: boolean | null
          can_share_progress?: boolean | null
          can_view_leaderboards?: boolean | null
          content_filter_level?: string | null
          created_at?: string
          daily_time_limit_minutes?: number | null
          id?: string
          max_difficulty_level?: number | null
          override_content_filter?: boolean | null
          override_feature_access?: boolean | null
          override_monitoring?: boolean | null
          override_time_limits?: boolean | null
          pod_id: string
          report_frequency?: string | null
          send_progress_reports?: boolean | null
          updated_at?: string
          user_id: string
        }
        Update: {
          alert_on_inappropriate_content?: boolean | null
          allowed_days?: number[] | null
          allowed_end_time?: string | null
          allowed_start_time?: string | null
          blocked_categories?: string[] | null
          can_access_chat?: boolean | null
          can_access_multiplayer?: boolean | null
          can_share_progress?: boolean | null
          can_view_leaderboards?: boolean | null
          content_filter_level?: string | null
          created_at?: string
          daily_time_limit_minutes?: number | null
          id?: string
          max_difficulty_level?: number | null
          override_content_filter?: boolean | null
          override_feature_access?: boolean | null
          override_monitoring?: boolean | null
          override_time_limits?: boolean | null
          pod_id?: string
          report_frequency?: string | null
          send_progress_reports?: boolean | null
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "member_individual_settings_pod_id_fkey"
            columns: ["pod_id"]
            isOneToOne: false
            referencedRelation: "learning_pods"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "member_individual_settings_pod_id_fkey"
            columns: ["pod_id"]
            isOneToOne: false
            referencedRelation: "pod_discovery"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "member_individual_settings_pod_id_fkey"
            columns: ["pod_id"]
            isOneToOne: false
            referencedRelation: "pod_discovery"
            referencedColumns: ["pod_id"]
          },
          {
            foreignKeyName: "member_settings_membership_fkey"
            columns: ["pod_id", "user_id"]
            isOneToOne: true
            referencedRelation: "pod_memberships"
            referencedColumns: ["pod_id", "user_id"]
          },
        ]
      }
      multiplayer_chat_messages: {
        Row: {
          created_at: string | null
          id: string
          is_from_host: boolean | null
          is_from_npc: boolean | null
          message_text: string
          message_type: string
          metadata: Json | null
          player_id: string
          reply_to_message_id: string | null
          room_id: string
          timestamp: string | null
        }
        Insert: {
          created_at?: string | null
          id?: string
          is_from_host?: boolean | null
          is_from_npc?: boolean | null
          message_text: string
          message_type?: string
          metadata?: Json | null
          player_id: string
          reply_to_message_id?: string | null
          room_id: string
          timestamp?: string | null
        }
        Update: {
          created_at?: string | null
          id?: string
          is_from_host?: boolean | null
          is_from_npc?: boolean | null
          message_text?: string
          message_type?: string
          metadata?: Json | null
          player_id?: string
          reply_to_message_id?: string | null
          room_id?: string
          timestamp?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "multiplayer_chat_messages_reply_to_fkey"
            columns: ["reply_to_message_id"]
            isOneToOne: false
            referencedRelation: "multiplayer_chat_messages"
            referencedColumns: ["id"]
          },
        ]
      }
      multiplayer_conversation_context: {
        Row: {
          conversation_history: Json | null
          created_at: string | null
          educational_goals: Json | null
          id: string
          last_interaction_at: string | null
          npc_player_id: string
          personality_state: Json | null
          room_id: string
          updated_at: string | null
        }
        Insert: {
          conversation_history?: Json | null
          created_at?: string | null
          educational_goals?: Json | null
          id?: string
          last_interaction_at?: string | null
          npc_player_id: string
          personality_state?: Json | null
          room_id: string
          updated_at?: string | null
        }
        Update: {
          conversation_history?: Json | null
          created_at?: string | null
          educational_goals?: Json | null
          id?: string
          last_interaction_at?: string | null
          npc_player_id?: string
          personality_state?: Json | null
          room_id?: string
          updated_at?: string | null
        }
        Relationships: []
      }
      multiplayer_game_events: {
        Row: {
          created_at: string | null
          event_data: Json | null
          event_type: string
          id: string
          player_id: string
          question_number: number | null
          room_id: string
          session_id: string
          timestamp: string | null
        }
        Insert: {
          created_at?: string | null
          event_data?: Json | null
          event_type: string
          id?: string
          player_id: string
          question_number?: number | null
          room_id: string
          session_id: string
          timestamp?: string | null
        }
        Update: {
          created_at?: string | null
          event_data?: Json | null
          event_type?: string
          id?: string
          player_id?: string
          question_number?: number | null
          room_id?: string
          session_id?: string
          timestamp?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "multiplayer_game_events_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "multiplayer_game_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      multiplayer_game_sessions: {
        Row: {
          completed_at: string | null
          created_at: string | null
          current_question_number: number | null
          final_scores: Json | null
          game_mode: string
          id: string
          performance_stats: Json | null
          room_id: string
          session_config: Json | null
          session_number: number
          session_status: string
          started_at: string | null
          topic_id: string
          total_questions: number
          updated_at: string | null
        }
        Insert: {
          completed_at?: string | null
          created_at?: string | null
          current_question_number?: number | null
          final_scores?: Json | null
          game_mode?: string
          id?: string
          performance_stats?: Json | null
          room_id: string
          session_config?: Json | null
          session_number?: number
          session_status?: string
          started_at?: string | null
          topic_id: string
          total_questions?: number
          updated_at?: string | null
        }
        Update: {
          completed_at?: string | null
          created_at?: string | null
          current_question_number?: number | null
          final_scores?: Json | null
          game_mode?: string
          id?: string
          performance_stats?: Json | null
          room_id?: string
          session_config?: Json | null
          session_number?: number
          session_status?: string
          started_at?: string | null
          topic_id?: string
          total_questions?: number
          updated_at?: string | null
        }
        Relationships: []
      }
      multiplayer_npc_players: {
        Row: {
          ai_behavior_config: Json | null
          created_at: string | null
          difficulty_level: number | null
          id: string
          is_active: boolean | null
          npc_id: string
          personality_type: string | null
          player_emoji: string
          player_name: string
          questions_answered: number | null
          questions_correct: number | null
          room_id: string
          score: number | null
          updated_at: string | null
        }
        Insert: {
          ai_behavior_config?: Json | null
          created_at?: string | null
          difficulty_level?: number | null
          id?: string
          is_active?: boolean | null
          npc_id: string
          personality_type?: string | null
          player_emoji: string
          player_name: string
          questions_answered?: number | null
          questions_correct?: number | null
          room_id: string
          score?: number | null
          updated_at?: string | null
        }
        Update: {
          ai_behavior_config?: Json | null
          created_at?: string | null
          difficulty_level?: number | null
          id?: string
          is_active?: boolean | null
          npc_id?: string
          personality_type?: string | null
          player_emoji?: string
          player_name?: string
          questions_answered?: number | null
          questions_correct?: number | null
          room_id?: string
          score?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "multiplayer_npc_players_room_id_fkey"
            columns: ["room_id"]
            isOneToOne: false
            referencedRelation: "multiplayer_rooms"
            referencedColumns: ["id"]
          },
        ]
      }
      multiplayer_question_responses: {
        Row: {
          boosts_used: number | null
          created_at: string | null
          hints_used: number | null
          id: string
          is_correct: boolean | null
          npc_player_id: string | null
          player_id: string | null
          points_earned: number | null
          question_id: string
          question_number: number
          response_metadata: Json | null
          response_time_ms: number | null
          room_id: string
          selected_answer: string | null
          submitted_at: string | null
          topic_id: string
        }
        Insert: {
          boosts_used?: number | null
          created_at?: string | null
          hints_used?: number | null
          id?: string
          is_correct?: boolean | null
          npc_player_id?: string | null
          player_id?: string | null
          points_earned?: number | null
          question_id: string
          question_number: number
          response_metadata?: Json | null
          response_time_ms?: number | null
          room_id: string
          selected_answer?: string | null
          submitted_at?: string | null
          topic_id: string
        }
        Update: {
          boosts_used?: number | null
          created_at?: string | null
          hints_used?: number | null
          id?: string
          is_correct?: boolean | null
          npc_player_id?: string | null
          player_id?: string | null
          points_earned?: number | null
          question_id?: string
          question_number?: number
          response_metadata?: Json | null
          response_time_ms?: number | null
          room_id?: string
          selected_answer?: string | null
          submitted_at?: string | null
          topic_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "multiplayer_question_responses_npc_player_id_fkey"
            columns: ["npc_player_id"]
            isOneToOne: false
            referencedRelation: "multiplayer_npc_players"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "multiplayer_question_responses_player_id_fkey"
            columns: ["player_id"]
            isOneToOne: false
            referencedRelation: "multiplayer_room_players"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "multiplayer_question_responses_room_id_fkey"
            columns: ["room_id"]
            isOneToOne: false
            referencedRelation: "multiplayer_rooms"
            referencedColumns: ["id"]
          },
        ]
      }
      multiplayer_quiz_attempts: {
        Row: {
          attempt_data: Json | null
          completed_at: string | null
          created_at: string | null
          final_score: number | null
          id: string
          player_id: string
          questions_correct: number | null
          questions_total: number | null
          room_id: string
          session_id: string
          time_spent_seconds: number | null
          topic_id: string
          updated_at: string | null
          user_id: string | null
        }
        Insert: {
          attempt_data?: Json | null
          completed_at?: string | null
          created_at?: string | null
          final_score?: number | null
          id?: string
          player_id: string
          questions_correct?: number | null
          questions_total?: number | null
          room_id: string
          session_id: string
          time_spent_seconds?: number | null
          topic_id: string
          updated_at?: string | null
          user_id?: string | null
        }
        Update: {
          attempt_data?: Json | null
          completed_at?: string | null
          created_at?: string | null
          final_score?: number | null
          id?: string
          player_id?: string
          questions_correct?: number | null
          questions_total?: number | null
          room_id?: string
          session_id?: string
          time_spent_seconds?: number | null
          topic_id?: string
          updated_at?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "multiplayer_quiz_attempts_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "multiplayer_game_sessions"
            referencedColumns: ["id"]
          },
        ]
