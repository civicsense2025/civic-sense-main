version: '3.8'

services:
  # PostgreSQL Database (Supabase-compatible)
  postgres:
    image: postgres:15-alpine
    container_name: civicsense-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: civicsense_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - civicsense-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d civicsense_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: civicsense-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - civicsense-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application (Development)
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: civicsense-web
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:54321
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/civicsense_dev
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - civicsense-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # Supabase Local Stack (Optional - for full Supabase experience)
  supabase:
    image: supabase/supabase:latest
    container_name: civicsense-supabase
    restart: unless-stopped
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: civicsense_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
      ANON_KEY: ${SUPABASE_ANON_KEY}
      SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
    ports:
      - "54321:8000"  # Supabase API Gateway
      - "54323:8001"  # Auth
      - "54324:8002"  # REST API
      - "54325:8003"  # Realtime
      - "54326:8004"  # Storage
    networks:
      - civicsense-network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - supabase

  # pgAdmin for database management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: civicsense-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@civicsense.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - civicsense-network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  civicsense-network:
    driver: bridge 